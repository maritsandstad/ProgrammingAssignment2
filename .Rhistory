available.packages()
install.packages(slidify)
install.packages("slidify", "ggplot2", "devtools")
install.packages("KernSmooth")
library(KernSmooth)
pwd
getwd()
myfunction<- function(x) {
y <- rnorm(100)
mean(y)
}
ls()
myfunction()
source("myfunction.R")
ls()
ls()
source("myfunction.R")
ls()
second(4)
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
help(c)
?c
z
c(z, 555, z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create(mytest.R)
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info(mytest.R)
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path('testdir2','testdir3'),recursive = TRUE)
setwd(old.dir)
unlink('testdir', recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times = 40)
rep(c(0,1,2),times = 10)
rep(c(0,1,2),each = 10)
num_vect <- c(0.5,55,-10,6)
tf<-numvect <1
tf<-num_vect <1
tf
new_var <- num_vect>= 6
num_vect>= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse " ")
paste(my_char, collapse = " ")
my_name <- c(my_char, "Marit")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y","Z"), sep = "")
paste(LETTERS, 1.4, sep="-")
paste(LETTERS, 1:4, sep="-")
swirl()
x <- c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x), x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2<-matrix(1:20, nrow = 1,ncol = 1)
my_matrix2<-matrix(1:20, nrow = 4,ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10<=10
5!=7
!5==7
FALSE &FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FAlSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8|| 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, FALSE)
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 5)
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("No news to report")
submit()
mad_libs(place = "Home", adjective = "soaking", noun = "chiuaua")
submit()
"I"%p%"love"%p%"R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <-Sys.time()
t1
class(t1)
unclass(t1)
t2 <-as.Date.POSIXlt(Sys.time())
t2 <-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d %Y %H:%M")
?strptime
t4 <- strptime(t3, "%B %d %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
getwd()
setwd(/Users/masan/R-code)
setwd("/Users/masan/R-code")
getwd()
?read.csv
?paste
?paste
?read.csv
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "sulfate", 1)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "sulfate", 1)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 1)
pollutantmean("specdata", "sulfate", 1)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
?complete.cases
?data.frame
?replications
?rep
source(complete)
source(complete.R)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
source("complete.R")
complete("specdata", c(2,4,8,10,12))
complete("specdata", c(2,4,8,10,12))
source("complete.R")
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25
)
complete("specdata", 3)
list.files("specdata")
class(list.files("specdata"))
length(list.files("specdata"))
?cor
cbind(NULL, c(1,2,4))
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 5000)
head(cr)
cr <- corr("speccopy", 5000)
head(cr)
cr <- corr("speccopy")
head(cr)
cr <- corr("speccopy")
source("corr.R")
cr <- corr("speccopy")
head(cr)
source("corr.R")
cr <- corr("speccopy")
source("corr.R")
cr <- corr("speccopy")
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata", 5000)
source("corr.R")
cr <- corr("specdata", 5000)
summary(cr)
source("corr.R")
source("corr.R")
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
source("corr.R")
cr <- corr("specdata", 150)
summary(cr)
head(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6,10,20,34,100,200,310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332,10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)],4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n,5)],4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr,4)))
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_list <- sapply(flags,class)
cls_list <- lapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data("iris")
?iris
tapply(iris$Sepal.Length, iris$Species, mean)
?rowMeans
library(datasets)
data("mtcars")
?mtcars
?sapply
?with
?mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
hpav <- tapply(mtcars$hp, mtcars$cyl, mean)
hpav[2,3] -hpav[2,1]
hpav[[2,3] -hpav[[2,1]
hpav[[2,3] -hpav[[2,1]]
hpav[[2,3] - hpav[[2,1]]
hpav[[2,3]] - hpav[[2,1]]
hpav[3] - hpav[1]
debug(ls)
ls()
q
?apply
hpav[3] - hpav[1]
setwd("/Users/masan/git/ProgrammingAssignment2/ProgrammingAssignment2/")
ls
ls
list
list()
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
pattern, sorted = TRUE)
q
q
q
?function
q
